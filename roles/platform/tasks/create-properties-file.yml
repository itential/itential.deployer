# Copyright (c) 2024, Itential, Inc
# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)
---

# TODO: Do we still need to support the primary/secondary concept?

# Note: Platform's encrypt.js script does not take command line arguments.
# Instead, it prompts the user for input, reads it from stdin, and prints the key on the last line.
# This necessitates the use of the workaround below.
- name: Encrypt default passwords
  when: not (platform_configure_vault | bool)
  no_log: true
  block:
    - name: Generate encrypted passwords
      ansible.builtin.shell: >
        set -o pipefail &&
        (echo "{{ item.plaintext }}"; sleep 2; echo "{{ platform_encryption_key }}") |
        node {{ platform_install_dir }}/utils/encrypt.js 2>&1 |
        tail -n 1
      args:
        executable: /bin/bash
      loop:
        - name: platform_redis_password_encrypted
          plaintext: "{{ platform_redis_password }}"
        - name: platform_redis_sentinel_password_encrypted
          plaintext: "{{ platform_redis_sentinel_password }}"
        - name: platform_mongo_password_encrypted
          plaintext: "{{ platform_mongo_password }}"
        - name: platform_default_user_password_encrypted
          plaintext: "{{ platform_default_user_password }}"
      register: encrypt_results
      changed_when: false
      failed_when: >
        encrypt_results.rc != 0 or
        encrypt_results.stdout == "" or
        not encrypt_results.stdout.startswith("$ENC") or
        (encrypt_results.stdout.split(':') | last | length) != 32

    - name: Set encrypted passwords
      ansible.builtin.set_fact:
        "{{ item.item.name }}": "{{ item.stdout }}"
      loop: "{{ encrypt_results.results }}"
      loop_control:
        label: "{{ item.item.name }}"

- name: Create the platform.properties file
  ansible.builtin.template:
    src: "{{ platform_release }}-properties.j2"
    dest: "{{ platform_config_dir }}/platform.properties"
    mode: "0600"
    owner: "{{ platform_user }}"
    group: "{{ platform_group }}"
    lstrip_blocks: true
    backup: true
  vars:
    profile_name: Local_AAA
  when: groups["platform_secondary"] is not defined or groups["platform_secondary"] | length < 1

- name: Create the Itential properties.json files for advanced prod builds
  when: groups["platform_secondary"] is defined and groups["platform_secondary"] | length > 0
  block:
    - name: Create the platform.properties file for the primary
      ansible.builtin.template:
        src: "{{ platform_release }}-properties.j2"
        dest: "{{ platform_config_dir }}/platform.properties"
        mode: "0600"
        owner: "{{ platform_user }}"
        group: "{{ platform_group }}"
        lstrip_blocks: true
        backup: true
      vars:
        profile_name: Primary_Local_AAA
      when: inventory_hostname in groups['platform']

    - name: Create the platform.properties file for the secondary
      ansible.builtin.template:
        src: "{{ platform_release }}-properties.j2"
        dest: "{{ platform_config_dir }}/platform.properties"
        mode: "0600"
        owner: "{{ platform_user }}"
        group: "{{ platform_group }}"
        lstrip_blocks: true
        backup: true
      vars:
        profile_name: Secondary_Local_AAA
      when: inventory_hostname in groups['platform_secondary']
