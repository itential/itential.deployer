# Copyright (c) 2024, Itential, Inc
# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)
---
- name: Update release file with Itential Platform version
  ansible.builtin.lineinfile:
    path: "{{ itential_release_file }}"
    regexp: "^PLATFORM="
    line: "PLATFORM={{ platform_release }}"
    mode: "0644"
    create: true

- name: Capture Python version
  ansible.builtin.command:
    cmd: "{{ platform_python_executable }} -V"
  register: python_installed_version
  changed_when: false

- name: Update release file with Python version
  ansible.builtin.lineinfile:
    path: "{{ itential_release_file }}"
    regexp: "^PYTHON="
    line: "PYTHON={{ python_installed_version.stdout }}"
    mode: "0644"
    create: true

- name: Capture Pip version
  ansible.builtin.command:
    cmd: "{{ platform_pip_executable }} -V"
  register: pip_installed_version
  changed_when: false

- name: Update release file with Pip version
  ansible.builtin.lineinfile:
    path: "{{ itential_release_file }}"
    regexp: "^PIP="
    line: "PIP={{ pip_installed_version.stdout }}"
    mode: "0644"
    create: true

- name: Capture Jinja2 version
  ansible.builtin.shell:
    cmd: "set -o pipefail && {{ platform_pip_executable }} list --retries 1 --timeout 1 | grep -i jinja2 | awk '{print $2}'"
  become: true
  become_user: "{{ platform_user }}"
  register: jinja2_installed_version
  changed_when: false

- name: Update release file with Jinja2 version
  ansible.builtin.lineinfile:
    path: "{{ itential_release_file }}"
    regexp: "^JINJA2="
    line: "JINJA2={{ jinja2_installed_version.stdout }}"
    mode: "0644"
    create: true

- name: Capture MarkupSafe version
  ansible.builtin.shell:
    cmd: "set -o pipefail && {{ platform_pip_executable }} list --retries 1 --timeout 1 | grep -i markupsafe | awk '{print $2}'"
  become: true
  become_user: "{{ platform_user }}"
  register: markupsafe_installed_version
  changed_when: false

- name: Update release file with MarkupSafe version
  ansible.builtin.lineinfile:
    path: "{{ itential_release_file }}"
    regexp: "^MARKUPSAFE="
    line: "MARKUPSAFE={{ markupsafe_installed_version.stdout }}"
    mode: "0644"
    create: true

- name: Capture TextFSM version
  ansible.builtin.shell:
    cmd: "set -o pipefail && {{ platform_pip_executable }} list --retries 1 --timeout 1 | grep -i textfsm | awk '{print $2}'"
  become: true
  become_user: "{{ platform_user }}"
  register: textfsm_installed_version
  changed_when: false

- name: Update release file with TextFMS version
  ansible.builtin.lineinfile:
    path: "{{ itential_release_file }}"
    regexp: "^TEXTFSM="
    line: "TEXTFSM={{ textfsm_installed_version.stdout }}"
    mode: "0644"
    create: true

- name: Capture NodeJS version
  ansible.builtin.command:
    cmd: node --version
  register: nodejs_installed_version
  changed_when: false

- name: Update release file with NodeJS version
  ansible.builtin.lineinfile:
    path: "{{ itential_release_file }}"
    regexp: "^NODEJS="
    line: "NODEJS={{ nodejs_installed_version.stdout }}"
    mode: "0644"
    create: true
