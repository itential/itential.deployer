# Copyright (c) 2024, Itential, Inc
# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)
---
- name: Validate offline_download_dir is set
  ansible.builtin.assert:
    that: offline_download_dir is defined
    msg: "offline_download_dir must be set"

- name: Validate offline_download_method is set
  ansible.builtin.assert:
    that: offline_download_method is defined
    msg: "offline_download_method must be set"

- name: Validate offline_download_packages is set
  ansible.builtin.assert:
    that: offline_download_packages is defined
    msg: "offline_download_packages must be set"

- name: Download packages
  when:
    - offline_download_packages is defined
    - offline_download_packages is iterable
    - offline_download_packages | length > 0
  block:
    - name: Validate download method
      ansible.builtin.fail:
        msg: "invalid download method"
      when: offline_download_method is not defined or
            offline_download_method not in
            ['yum_module', 'yum_install', 'yum_reinstall', 'repotrack', 'yumdownloader']

    - name: Create download directory
      ansible.builtin.file:
        path: "{{ offline_download_dir }}"
        state: directory
        mode: '0755'

    - name: Download packages (ansible yum module)
      ansible.builtin.dnf:
        name: "{{ offline_download_packages }}"
        state: present
        download_only: true
        download_dir: "{{ offline_download_dir }}"
      when: offline_download_method == "yum_module"

    - name: Download packages (yum install) # noqa command-instead-of-module
      ansible.builtin.command:
        cmd: "yum install --downloadonly --downloaddir {{ offline_download_dir }}
              -y {{ offline_download_packages }}"
      changed_when: true
      when: offline_download_method == "yum_install"

    - name: Download packages (yum reinstall) # noqa command-instead-of-module
      ansible.builtin.command:
        cmd: "yum reinstall --downloadonly --downloaddir {{ offline_download_dir }}
              -y {{ offline_download_packages }}"
      changed_when: true
      when: offline_download_method == "yum_reinstall"

    - name: Download packages (repotrack)
      ansible.builtin.command:
        cmd: repotrack "{{ offline_download_packages }}"
      args:
        chdir: "{{ offline_download_dir }}"
      changed_when: true
      when: offline_download_method == "repotrack"

    - name: Use yumdownloader
      when: offline_download_method == "yumdownloader"
      block:
        - name: Install Yum utils
          ansible.builtin.dnf:
            name: yum-utils
            state: present

        - name: Download packages (yumdownloader)
          ansible.builtin.command:
            cmd: "yumdownloader --resolve --downloaddir {{ offline_download_dir }}
                  {{ offline_download_packages | join(' ') }}"
          changed_when: true
          failed_when: false
