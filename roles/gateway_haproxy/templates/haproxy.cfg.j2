#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s   # maximum allowed time to wait for a complete HTTP request from the client
    timeout queue           1m    # maximum time to wait in the queue for a connection slot to be free
    timeout connect         10s   # maximum time to wait for a connection attempt to a server to succeed
    timeout client          10m    # maximum inactivity time on the client side
    timeout server          10m    # maximum inactivity time on the server side.
    timeout http-keep-alive 10s   # maximum allowed time to wait for a new HTTP request to appear
    timeout check           10s   # additional check timeout, but only after a connection has been already established.
    maxconn                 3000

#---------------------------------------------------------------------
# itential frontend which proxys to the IAG backend
#---------------------------------------------------------------------
frontend  automation-gateway-frontend
    option forwardfor except 127.0.0.1
    maxconn 100
    bind *:{{ gateway_https_port }} ssl crt {{ gateway_haproxy_ssl_cert_dest }} force-tlsv12 ciphers DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256
    default_backend automation-gateway-backend

#---------------------------------------------------------------------
# IAG backend
#---------------------------------------------------------------------
backend automation-gateway-backend
    server  app1 {{ inventory_hostname }}:{{ gateway_port }}
