# Copyright (c) 2024, Itential, Inc
# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)
---

- name: Validate distribution major version
  ansible.builtin.fail:
    msg: Download not supported for version 7
  when: ansible_distribution_major_version == "7"

- name: Validate offline_install variable
  ansible.builtin.fail:
    msg: offline_install must be set to false for download
  when:
    - offline_install is defined
    - offline_install

- name: Include release vars
  ansible.builtin.include_vars:
    file: "{{ item }}"
  with_first_found:
    - "{{ iag_release }}-{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version }}.yml"
    - "release-undefined.yml"

- name: Check for valid IAG release
  ansible.builtin.fail:
    msg: "Deployer does not support installing Gateway version {{ iag_release }} on {{ ansible_distribution }}-{{ ansible_distribution_major_version }}"
  when: invalid_iag_release is defined

- name: Download Gateway OS rpms
  ansible.builtin.import_role:
    name: offline
    tasks_from: download-rpms
  vars:
    download_method: yum_module
    download_packages: "{{ gateway_packages }}"
    download_dir: "{{ rpms_download_dir_target_node }}"
  tags: download_gateway_packages

- name: Install Gateway rpms
  ansible.builtin.dnf:
    name: "{{ item }}"
    state: present
  with_items: "{{ gateway_packages }}"
  register: gateway_packages_installed
  tags: install_gateway_packages

- name: Download Python packages
  ansible.builtin.include_tasks:
    file: download-packages-python.yml

- name: Create archives directory
  ansible.builtin.file:
    path: "{{ archives_download_dir_target_node }}"
    state: directory
    mode: '0755'

- name: Copy archives to control node
  ansible.builtin.import_role:
    name: offline
    tasks_from: fetch-packages
  vars:
    src_dir: "{{ archives_download_dir_target_node }}"
    dest_dir: "{{ archives_download_dir_control_node }}"

- name: Copy rpms to control node
  ansible.builtin.import_role:
    name: offline
    tasks_from: fetch-packages
  vars:
    src_dir: "{{ rpms_download_dir_target_node }}"
    dest_dir: "{{ rpms_download_dir_control_node }}"

- name: Uninstall Gateway packages
  ansible.builtin.dnf:
    name: "{{ item }}"
    state: absent
    autoremove: true
  with_items: "{{ gateway_packages_installed.results | selectattr('changed', 'equalto', true) | map(attribute='item') }}"
