# Copyright (c) 2024, Itential, Inc
# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)
---

# When authorization is enabled in mongo using a replica set, the members of a
# replica set will be required to authenticate to each other. This is accomplished
# with a keyFile or x509 certificate. The following block will create this key file,
# distribute it to each node, and set the appropriate ownership and permissions.
- name: Create replica set keyfile
  when: mongodb_replication | bool
  block:

    - name: Ensure that the directory exists for the certificates and key files
      ansible.builtin.file:
        state: directory
        path: "{{ mongodb_ssl_root_dir }}/mongodb"
        owner: root
        group: root
        mode: "0775"

    - name: Check if replica set key exists on the primary node
      ansible.builtin.stat:
        path: "{{ mongodb_auth_keyfile_destination }}"
      when: inventory_hostname == groups['mongodb'][0]
      register: keyfile_stat

    # Use openssl to generate a key file on primary mongo node. The primary is the
    # first node defined in the host file. The key file is created here once and then
    # distributed to each of the other nodes in the replset. They must all have the
    # same key file.
    - name: Generate a new replica set key with OpenSSL
      ansible.builtin.shell:
        cmd: openssl rand -base64 756 > "{{ mongodb_auth_keyfile_destination }}"
      args:
        creates: "{{ mongodb_auth_keyfile_destination }}"
      when:
        - inventory_hostname == groups['mongodb'][0]
        - not keyfile_stat.stat.exists

    - name: Get the key from the primary node
      ansible.builtin.slurp:
        src: '{{ mongodb_auth_keyfile_destination }}'
      register: keyfile
      delegate_to: "{{ groups['mongodb'][0] }}"
      when: inventory_hostname != groups['mongodb'][0]

    - name: Copy the key file to the secondary nodes
      ansible.builtin.copy:
        dest: "{{ mongodb_auth_keyfile_destination }}"
        content: "{{ keyfile.content | b64decode }}"
        owner: "{{ mongodb_owner }}"
        group: "{{ mongodb_group }}"
        mode: "0400"
      when: inventory_hostname != groups['mongodb'][0]

    - name: Set the key file ownership and permissions
      ansible.builtin.file:
        path: "{{ mongodb_auth_keyfile_destination }}"
        owner: "{{ mongodb_owner }}"
        group: "{{ mongodb_group }}"
        mode: '0400'

# Execute the template to apply changes to the mongo.conf for auth
- name: Create MongoDB config file
  ansible.builtin.template:
    src: mongod.conf.j2
    dest: "{{ mongodb_conf_file }}"
    owner: "{{ mongodb_owner }}"
    group: "{{ mongodb_group }}"
    mode: "0644"
  vars:
    stage: "auth"

- name: Start mongo
  ansible.builtin.systemd:
    name: mongod
    state: restarted
    enabled: true
