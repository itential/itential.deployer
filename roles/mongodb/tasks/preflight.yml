# Copyright (c) 2024, Itential, Inc
# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)
---
- name: Include release vars
  ansible.builtin.include_vars:
    file: "{{ item }}"
  with_first_found:
    - "release-{{ iap_release }}.yml"
    - "release-undefined.yml"
  tags: always

- name: Run common checks
  ansible.builtin.include_role:
    name: preflight
  vars:
    port_checks:
      - 27017   # Mongo
    url_checks:
      - "https://repo.mongodb.org/yum/redhat/"

- name: Get avx cpu info
  ansible.builtin.command: grep avx /proc/cpuinfo
  register: avx_cpuinfo

- name: Set avx variable
  ansible.builtin.set_fact:
    avx: "{{ 'supported' if ('avx' in avx_cpuinfo['stdout']) else 'not supported' }}"

- name: Set avx
  ansible.builtin.set_fact:
    results: '{{ results | combine({"avx": avx}) }}'

- name: Create temporary working directory
  ansible.builtin.tempfile:
    state: directory
  register: workingdir

- name: Set pass to true if all conditions pass
  ansible.builtin.set_fact:
    results: '{{ results | combine({"pass": true}) }}'
  when:
    - results.cpuCores >= mongodb_cpu_cores
    - results.get(mountVarName, 0) >= mongodb_free_disk_space
    - results.memory >= mongodb_ram
    - results.url_status.values() | unique | length == 1 and results.url_status.values() | unique | first == 200

- name: Write the JSON fact to a file
  ansible.builtin.copy:
    content: "{{ results | to_json | indent(2) }}"
    dest: "{{ workingdir.path }}/mongodbPreflightResults.json"
    mode: '0777'

- name: Fetch MongoDB results json
  ansible.builtin.fetch:
    src: "{{ workingdir.path }}/mongodbPreflightResults.json"
    dest: "{{ preflight_directory }}/mongodb_{{ inventory_hostname }}_results.json"
    flat: true

- name: Create MongoDB preflight results
  ansible.builtin.template:
    src: "mongodb.preflight.j2"
    dest: "{{ workingdir.path }}/mongodbPreflightResults.txt"
    mode: '0777'

- name: Fetch MongoDB results
  ansible.builtin.fetch:
    src: "{{ workingdir.path }}/mongodbPreflightResults.txt"
    dest: "{{ preflight_directory }}/mongodb_{{ inventory_hostname }}_results.txt"
    flat: true

- name: Remove temporary working directory
  ansible.builtin.file:
    path: "{{ workingdir.path }}"
    state: absent

- name: Check if host passed preflight checks.
  ansible.builtin.assert:
    that: results["pass"] == true
    fail_msg: "Platform host did not pass the preflight checks"
    success_msg: "Platform host passed the preflight checks"
  when:
    - ignore_preflight_checks is defined
    - ignore_preflight_checks == false
