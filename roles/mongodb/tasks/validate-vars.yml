# Copyright (c) 2024, Itential, Inc
# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)
---
- name: Validate and set installation variables
  tags: always
  block:
    - name: Validate an installation variable is set
      ansible.builtin.assert:
        that: >
          (platform_release is defined) or
          (mongodb_version is defined and
           mongodb_packages is defined and
           mongodb_python_packages is defined)
        fail_msg: >-
          platform_release must be defined OR
          mongodb_version, mongodb_packages, and mongodb_python_packages must be defined

    - name: Validate installation variables when not using platform_release
      ansible.builtin.assert:
        that:
          - mongodb_version is defined
          - mongodb_packages is defined
          - mongodb_python_packages is defined
        fail_msg: >-
          mongodb_version, mongodb_packages, and mongodb_python_packages
          must be defined when platform_release is not defined
      when: platform_release is not defined

    - name: Set installation variables when using Itential Platform release defaults
      when: platform_release is defined
      block:
        - name: Load Itential Platform release default variables
          ansible.builtin.include_vars:
            file: "{{ item }}"
          with_first_found:
            - "platform-release-{{ platform_release }}.yml"
            - "platform-release-undefined.yml"

        - name: Check for valid MongoDB release
          ansible.builtin.assert:
            that: mongodb_invalid_platform_release is not defined
            fail_msg: >-
              Deployer does not support installing MongoDB
              for Itential Platform release {{ platform_release }}

        - name: Set mongodb_version to the default value when not defined in inventory
          ansible.builtin.set_fact:
            mongodb_version: "{{ mongodb_version_default[ansible_distribution_major_version] }}"
          when: mongodb_version is not defined

        - name: Set mongodb_packages to the default value when not defined in inventory
          ansible.builtin.set_fact:
            mongodb_packages: "{{ mongodb_packages_default[ansible_distribution_major_version] }}"
          when: mongodb_packages is not defined

        - name: Set mongodb_python_packages to the default value when not defined in inventory
          ansible.builtin.set_fact:
            mongodb_python_packages: "{{ mongodb_python_packages_default[ansible_distribution_major_version] }}"
          when: mongodb_python_packages is not defined

        - name: Set mongodb_gpgkey_url to the default value when not defined in inventory
          ansible.builtin.set_fact:
            mongodb_gpgkey_url: "{{ mongodb_gpgkey_url_default[ansible_distribution_major_version] }}"
          when: mongodb_gpgkey_url is not defined

        - name: Set mongodb_package_dependencies to the default value when not defined in inventory
          ansible.builtin.set_fact:
            mongodb_package_dependencies: "{{ mongodb_package_dependencies_default[ansible_distribution_major_version] }}"
          when: mongodb_package_dependencies is not defined

    - name: Print MongoDB installation details
      ansible.builtin.debug:
        msg:
          - "MongoDB version: {{ mongodb_version }}"
          - "MongoDB packages: {{ mongodb_packages }}"
          - "MongoDB dependency packages: {{ mongodb_package_dependencies }}"
          - "Python packages: {{ mongodb_python_packages }}"
      when: not offline_install_enabled
