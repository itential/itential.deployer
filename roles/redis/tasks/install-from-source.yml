# Copyright (c) 2024, Itential, Inc
# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)
---
- name: Check to see if Redis is already installed
  ansible.builtin.stat:
    path: "{{ redis_bin_dir }}/redis-server"
  register: redis_installed

- name: Install Redis
  when: not redis_installed.stat.exists
  block:
    - name: Create temporary working directory
      ansible.builtin.tempfile:
        state: directory
      register: redis_build_temp_dir

    - name: Online install
      when: not offline_install
      block:
        - name: Install packages required to build Redis
          ansible.builtin.package:
            name: "{{ redis_build_packages }}"
            state: present
          register: redis_install_result

        - name: Download Redis source archive
          ansible.builtin.get_url:
            url: "{{ redis_source_url }}"
            dest: "{{ redis_build_temp_dir.path }}"
            mode: "0644"
          register: redis_download

        - name: Unarchive Redis source archive
          ansible.builtin.unarchive:
            src: "{{ redis_download.dest }}"
            dest: "{{ redis_build_temp_dir.path }}"
            remote_src: true
          register: unarchive_result

        - name: Set the Redis build directory
          ansible.builtin.set_fact:
            redis_build_dir: "{{ unarchive_result.src.split('.tar.gz')[0] }}"

    - name: Offline install
      when: offline_install
      block:
        - name: Copy Redis archive (offline)
          ansible.builtin.copy:
            src: "{{ item }}"
            dest: "{{ redis_build_temp_dir.path }}/{{ item | basename }}"
            mode: '0644'
          with_fileglob: "{{ archives_path }}/redis*.tar.gz"

        - name: Find Redis archive (offline)
          ansible.builtin.find:
            paths: "{{ redis_build_temp_dir.path }}"
            patterns: "redis*.tar.gz"
          register: redis_archive

        - name: Unarchive Redis source archive (offline)
          ansible.builtin.unarchive:
            src: "{{ redis_archive.files[0].path }}"
            dest: "{{ redis_build_temp_dir.path }}"
            remote_src: true
          register: unarchive_result

        - name: Set the Redis build directory
          ansible.builtin.set_fact:
            redis_build_dir: "{{ unarchive_result.src.split('.tar.gz')[0] }}"

    - name: Make Redis
      community.general.make:
        chdir: "{{ redis_build_dir }}"
        target: install
        params:
          USE_SYSTEMD: true
          PREFIX: "{{ redis_bin_dir | dirname }}"
      tags: make_redis

    - name: Remove temporary working directory
      ansible.builtin.file:
        path: "{{ redis_build_temp_dir.path }}"
        state: absent

- name: Set owership of all files in the bin directory
  ansible.builtin.file:
    path: "{{ redis_bin_dir }}"
    owner: "{{ redis_owner }}"
    group: "{{ redis_group }}"
    seuser: system_u
    serole: object_r
    setype: redis_exec_t
    state: directory
    recurse: true
