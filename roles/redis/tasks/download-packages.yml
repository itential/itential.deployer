# Copyright (c) 2024, Itential, Inc
# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)
---
- name: Include tasks to validate variables
  ansible.builtin.include_tasks:
    file: validate-vars.yml
  tags: always

- name: Include tasks to validate offline variables
  ansible.builtin.include_tasks:
    file: validate-vars-offline.yml

- name: Download package from Remi repo
  when: not redis_install_from_source | bool
  block:
    - name: Include tasks to install Remi repo
      ansible.builtin.include_tasks:
        file: install-remi-repo.yml
      when:
        - redis_packages is defined
        - redis_packages is search('remi')

    - name: Download Redis dependency RPMs
      ansible.builtin.import_role:
        name: offline
        tasks_from: download-rpms
      vars:
        offline_download_method: yum_module
        offline_download_packages: "{{ redis_package_dependencies }} "
        offline_download_dir: "{{ redis_offline_target_node_rpms_dir }}/dependencies"

    - name: Copy Redis dependency RPMs to control node
      ansible.builtin.import_role:
        name: offline
        tasks_from: fetch-packages
      vars:
        offline_src_dir: "{{ redis_offline_target_node_rpms_dir }}/dependencies"
        offline_dest_dir: "{{ redis_offline_control_node_rpms_dir }}/dependencies"

    - name: Download Redis RPMs
      ansible.builtin.import_role:
        name: offline
        tasks_from: download-rpms
      vars:
        offline_download_method: yum_module
        offline_download_packages: "{{ redis_packages }} "
        offline_download_dir: "{{ redis_offline_target_node_rpms_dir }}/redis"

    - name: Copy Redis RPMs to control node
      ansible.builtin.import_role:
        name: offline
        tasks_from: fetch-packages
      vars:
        offline_src_dir: "{{ redis_offline_target_node_rpms_dir }}/redis"
        offline_dest_dir: "{{ redis_offline_control_node_rpms_dir }}/redis"

- name: Download source packages
  when: redis_install_from_source | bool
  block:
    - name: Create archives directory
      ansible.builtin.file:
        path: "{{ redis_offline_target_node_archives_dir }}"
        state: directory
        mode: '0755'

    - name: Download Redis archive
      ansible.builtin.get_url:
        url: "{{ redis_source_url }}"
        dest: "{{ redis_offline_target_node_archives_dir }}"
        mode: "0644"

    - name: Copy Redis archive to control node
      ansible.builtin.import_role:
        name: offline
        tasks_from: fetch-packages
      vars:
        offline_src_dir: "{{ redis_offline_target_node_archives_dir }}"
        offline_dest_dir: "{{ redis_offline_control_node_archives_dir }}"

    - name: Download Redis build RPMs
      ansible.builtin.import_role:
        name: offline
        tasks_from: download-rpms
      vars:
        offline_download_method: yum_module
        offline_download_packages: "{{ redis_build_packages }}"
        offline_download_dir: "{{ redis_offline_target_node_rpms_dir }}/build"

    - name: Copy Redis build RPMs to control node
      ansible.builtin.import_role:
        name: offline
        tasks_from: fetch-packages
      vars:
        offline_src_dir: "{{ redis_offline_target_node_rpms_dir }}/build"
        offline_dest_dir: "{{ redis_offline_control_node_rpms_dir }}/build"
