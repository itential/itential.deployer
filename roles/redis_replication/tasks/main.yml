# Copyright (c) 2024, Itential, Inc
# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)
---
- name: Configure Redis clustering
  notify:
    - Restart Redis
    - Restart Sentinel
  block:
    - name: Use template to generate sentinel.conf
      ansible.builtin.template:
        src: sentinel.conf.j2
        dest: "{{ redis_sentinel_conf_file }}"
        owner: "{{ redis_owner }}"
        group: "{{ redis_group }}"
        mode: "0640"
        backup: true
      when:
        - groups['redis'] is defined
        - inventory_hostname in groups['redis']
      vars:
        master_name: "{{ hostvars[groups['redis'][0]].inventory_hostname }}"

    - name: Use template to generate sentinel.conf for secondary DR
      ansible.builtin.template:
        src: sentinel.conf.j2
        dest: "{{ redis_sentinel_conf_file }}"
        owner: "{{ redis_owner }}"
        group: "{{ redis_group }}"
        mode: "0640"
        backup: true
      when:
        - groups['redis_secondary'] is defined
        - inventory_hostname in groups['redis_secondary']
      vars:
        master_name: "{{ hostvars[groups['redis_secondary'][0]].inventory_hostname }}"

    # Only the replicas should have this "replicaof" config line. The first host
    # defined in the hosts file is chosen as the Redis primary, so, this should
    # only happen on the others, not the first.
    - name: Update replicaof line for all replicas redis.conf files
      ansible.builtin.lineinfile:
        path: "{{ redis_conf_file }}"
        regexp: "# replicaof <masterip> <masterport>"
        line: "replicaof {{ hostvars[groups['redis'][0]].inventory_hostname }} {{ redis_port }}"
      when:
        - groups['redis'] is defined
        - inventory_hostname in groups['redis']
        - inventory_hostname not in groups['redis'][0]

    - name: Update replicaof line for all replicas redis.conf files for secondary DR
      ansible.builtin.lineinfile:
        path: "{{ redis_conf_file }}"
        regexp: "# replicaof <masterip> <masterport>"
        line: "replicaof {{ hostvars[groups['redis_secondary'][0]].inventory_hostname }} {{ redis_port }}"
      when:
        - groups['redis_secondary'] is defined
        - inventory_hostname in groups['redis_secondary']
        - inventory_hostname not in groups['redis_secondary'][0]

    # Check if firewalld is running, if it is then open the appropriate ports
    - name: Gather service facts
      ansible.builtin.service_facts:

    - name: Open Port on FirewallD Public Zone
      ansible.posix.firewalld:
        port: "{{ redis_sentinel_port }}/tcp"
        permanent: true
        state: enabled
        zone: public
        immediate: true
      when:
        - ansible_facts.services["firewalld.service"] is defined
        - ansible_facts.services["firewalld.service"].state == "running"
        - ansible_facts.services["firewalld.service"].status == "enabled"
